{"version":3,"sources":["components/to-do-list-item/to-do-list-item.js","components/to-do-list-item/index.js","components/to-do-list/to-do-list.js","components/to-do-list/index.js","components/statistic/statistic.js","components/statistic/index.js","components/to-do-form/index.js","components/to-do-form/to-do-form.js","components/search-form/search-form.js","components/to-do-delete/to-do-delete.js","components/to-do-delete/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["ToDoListItem","props","isDone","isImportant","text","onItemClick","onImportantClick","onDeleteItemClick","id","classN","className","title","onClick","ToDoList","data","map","task","key","Statistic","all","done","important","onStatClick","filter","progressStyle","paddingLeft","Number","baseClass","doneClass","markClass","allClass","role","aria-valuenow","aria-valuemin","aria-valuemax","style","ToDoForm","state","input","onAddTask","onAddItem","setState","onInputChange","ev","target","value","type","placeholder","aria-label","onChange","this","Component","SearchForm","onSearchInput","ToDoDelete","onDeleteClick","App","maxId","todos","search","db","forEach","el","dbUpdate","item","generateItem","unshift","dbAdd","dbDelete","dbDeleteAll","dbInit","dbRead","trans","onsuccess","result","reduce","max","visible","dbOperation","window","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","req","accessType","transaction","onerror","console","error","tasks","objectStore","add","put","delete","transRead","getAll","stateInit","clear","log","length","counter","list","regS","RegExp","test","stats","generateStatistic","filteredTasks","searchedArr","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.99b58892.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./to-do-list-item.css\";\r\n\r\nfunction ToDoListItem(props) {\r\n  const { isDone, isImportant, text, onItemClick, onImportantClick,onDeleteItemClick, id } = props;\r\n  let classN = \"list-group-item\";\r\n  classN += isDone ? \" done\" : \"\";\r\n  classN += isImportant ? \" important\" : \"\";\r\n\r\n\r\n  return (\r\n    <li className={classN}>\r\n      <button className=\"btn btn-outline-danger float-right\" title=\"удалить\"\r\n       onClick={()=>onDeleteItemClick(id)}>\r\n        <i className=\"del fas fa-trash-alt float-right \"></i>\r\n      </button>\r\n\r\n      <button className=\"btn btn-outline-success float-right mr-2\" title=\"сделать важным\"\r\n      onClick={()=>onImportantClick(id)} >\r\n        <i className=\"imp fas fa-star float-right\"></i>\r\n      </button>\r\n\r\n      <span onClick={ () =>onItemClick(id)} className=\"d-block\">\r\n        {text}\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ToDoListItem;\r\n","import ToDoListItem from './to-do-list-item.js';\r\n\r\nexport default ToDoListItem;","import React from \"react\";\r\nimport ToDoListItem from \"../to-do-list-item\";\r\nimport \"./to-do-list.css\";\r\n\r\nfunction ToDoList(props) {\r\n  const {data, onItemClick, onImportantClick, onDeleteItemClick} = props;\r\n  return (\r\n      <ul className=\"toDoList list-group\">\r\n        {data.map(task =>(\r\n            <ToDoListItem \r\n               key={task.id}\r\n               onItemClick={onItemClick}\r\n               onImportantClick={onImportantClick}\r\n               onDeleteItemClick ={onDeleteItemClick}\r\n               { ...task}\r\n            />\r\n         ))\r\n        }\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import ToDoList from './to-do-list.js';\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nimport './statistic.css';\r\n\r\nfunction Statistic(props){\r\n    const {all, done, important, onStatClick, filter} = props;\r\n    const progressStyle = {paddingLeft : \"\"};\r\n    progressStyle.paddingLeft=(Number(done*100)/Number(all) + \"%\");\r\n    const baseClass = 'badge m-1 c-pointer';\r\n    const doneClass = `${baseClass} badge-dark${filter === 'done'? ' badge-pill': ''}`;\r\n    const markClass = `${baseClass} badge-info${filter === 'important'? ' badge-pill': ''}`;\r\n    const allClass = `${baseClass} badge-success${filter === 'all'? ' badge-pill': ''}`;\r\n    \r\n    return (\r\n        <section>\r\n             \r\n        <p className=\"statistic\">\r\n            <span \r\n                className={doneClass} role=\"button\" title=\"Сделано\"\r\n                onClick={()=> onStatClick('done')} ><i className=\"fas fa-check-circle\"></i> {done}</span>\r\n            <span \r\n                className={markClass} role=\"button\" title=\"Важно\"\r\n                onClick={()=> onStatClick('important')}><i className=\"fas fa-star\"></i> {important}</span>\r\n            <span \r\n                className={allClass} role=\"button\" title=\"Все\"\r\n                onClick={()=> onStatClick('all')}><i className=\"fas fa-list-alt\"></i> {all}</span>\r\n             \r\n            </p>\r\n        <div className=\"progress\">\r\n           <div className=\"progress-bar progress-bar-striped progress-bar-animated bg-warning\" \r\n           role=\"progressbar\" \r\n           aria-valuenow={done} \r\n           aria-valuemin=\"0\" \r\n           aria-valuemax={all} \r\n           style={progressStyle} />\r\n           \r\n      </div>\r\n    \r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Statistic;","import Statistic from './statistic.js';\r\n\r\nexport default Statistic;","import ToDoForm from './to-do-form.js';\r\n\r\nexport default ToDoForm;","import React, {Component} from 'react';\r\n\r\nimport './to-do-form.css';\r\n\r\nexport default class ToDoForm extends Component{\r\nstate ={\r\n  input : ''\r\n}\r\n\r\n  onAddTask = () =>{\r\n   \r\n    this.props.onAddItem(this.state.input);\r\n    this.setState({\r\n      input: ''\r\n    });\r\n  }\r\n  onInputChange = (ev) =>{\r\n    this.setState({\r\n      input: ev.target.value\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n<div className=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Введите новую задачу\"\r\n          aria-label=\"Add todo task\"\r\n          onChange ={this.onInputChange}\r\n          value={this.state.input}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <button\r\n            className=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            onClick={this.onAddTask}>\r\n            Добавить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport './search-form.css';\r\n\r\nfunction SearchForm(props){\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <input \r\n                className=\"form-control mb-1\" \r\n                type=\"search\"\r\n                id=\"search\"\r\n                placeholder=\"&#128269; Поиск задачи\" \r\n                onChange={ props.onSearchInput }  />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nfunction ToDoDelete(props){\r\n    return (\r\n        <div className=\"d-flex justify-content-center w-100\"> \r\n            <button \r\n                type=\"button\" \r\n                className=\"btn btn-danger w-100 m-3\"\r\n                onClick={ props.onDeleteClick }>Очистить все</button>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoDelete;","import ToDoDelete from \"./to-do-delete.js\";\r\n\r\nexport default ToDoDelete;","import App from './app.js';\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\nimport ToDoList from \"../to-do-list\";\r\nimport Statistic from \"../statistic\";\r\nimport ToDoForm from \"../to-do-form\";\r\nimport SearchForm from '../search-form/search-form';\r\nimport ToDoDelete from '../to-do-delete';\r\n\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    maxId : 1,\r\n    todos: [],\r\n    filter : 'all',\r\n    search : ''\r\n  }\r\n  \r\n  db = null;\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.dbInit();\r\n    this.dbRead();\r\n  }\r\n\r\n  stateInit(trans){\r\n    trans.onsuccess = ev =>{\r\n      const todos=ev.target.result;\r\n      const maxId = todos.reduce((max, {id})=>{\r\n        return max > id? max: id;\r\n      }, 1 );\r\n        this.setState({todos,visible:todos, maxId});\r\n    }\r\n  }\r\n \r\n  dbRead(){\r\n    this.dbOperation('read');\r\n  }\r\n\r\n  dbInit(){\r\n    const req = window.indexedDB.open('tasksBank', 1);\r\n      req.onupgradeneeded = ev =>{\r\n        ev.target.result.createObjectStore('tasks', {\r\n          keyPath : 'id'\r\n        }); \r\n      }\r\n  }\r\n\r\n  dbAdd(item){\r\n    this.dbOperation('create', item);\r\n  }\r\n\r\n  dbUpdate(item){\r\n    this.dbOperation('update', item);\r\n  }\r\n\r\n  dbDelete(id){\r\n    this.dbOperation('delete', id); \r\n  }\r\n  dbDeleteAll(){\r\n    this.dbOperation('delete-all'); \r\n  }\r\n\r\n  dbOperation(type, data){\r\n    const req = window.indexedDB.open('tasksBank', 1);\r\n\r\n    const accessType = type === 'read'? 'readonly': 'readwrite';\r\n\r\n    req.onsuccess = () =>{\r\n      const trans = req.result.transaction('tasks', accessType);\r\n      trans.onerror = () => {\r\n        console.error('error in looking for task object store');\r\n    }\r\n      const tasks = trans.objectStore('tasks');\r\n      \r\n      switch(type){\r\n        case 'create' : {\r\n          tasks.add(data);\r\n          break;\r\n        }\r\n        case 'update' : {\r\n          tasks.put(data);\r\n          break;\r\n        }\r\n        case 'delete' : {\r\n          tasks.delete(data);\r\n          break;\r\n        }\r\n        case 'read' : {\r\n          const transRead = tasks.getAll();\r\n          this.stateInit(transRead);\r\n          break;\r\n        }\r\n        case 'delete-all' : {\r\n          tasks.clear();\r\n          break;\r\n        }\r\n        default : {\r\n          console.log('error')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  onItemClick = (id) => {\r\n    const todos = [...this.state.todos];\r\n    todos.forEach(el => {\r\n      if (el.id === id) {\r\n        el.isDone = !el.isDone;\r\n        this.dbUpdate(el);\r\n      }\r\n    });\r\n    this.setState({todos});  \r\n  };\r\n\r\n  onImportantClick = id => {\r\n    const todos = [...this.state.todos];\r\n    todos.forEach(el => {\r\n      if (el.id === id) {\r\n        el.isImportant = !el.isImportant;\r\n        this.dbUpdate(el);\r\n      }\r\n    });\r\n    this.setState({todos});\r\n  }\r\n\r\n  onAddItem = (text) =>{\r\n  \r\n    const todos = [...this.state.todos];\r\n    const item = this.generateItem(text);\r\n    todos.unshift(item);\r\n    this.dbAdd(item);\r\n    this.setState({todos});\r\n  }\r\n\r\n  generateItem(text){\r\n    if(text.length === 0){\r\n      text = 'Задача не добавлена';\r\n    }\r\n    const id = this.state.maxId +1;\r\n    this.setState({maxId : id});\r\n     return{\r\n       id,\r\n       text,\r\n       isDone : false,\r\n       isImportant : false\r\n     }\r\n  }\r\n\r\n  onDeleteItemClick = id => {\r\n    const todos = this.state.todos.filter(el =>el.id !==id);\r\n    this.setState({todos});\r\n    this.dbDelete(id);\r\n  }\r\n\r\nonStatClick = filter =>{\r\n  this.setState({filter});\r\n}\r\nfilter(){\r\n  const todos = [...this.state.todos];\r\n  if(this.state.filter ==='all'){\r\n    \r\n    return todos;\r\n  }\r\n\r\n  if(this.state.filter === 'done'){\r\n    const arrDone = todos.filter(task => task.isDone);\r\n   return arrDone;\r\n  }\r\n\r\n  if(this.state.filter === 'important'){\r\n    const arrImportant = todos.filter(task => task.isImportant);\r\n    return arrImportant;\r\n  }\r\n\r\n}\r\n\r\n  generateStatistic(){\r\n    const all = this.state.todos.length;\r\n\r\n    const done = this.state.todos.reduce(\r\n      (counter, { isDone }) => (counter += isDone ? 1 : 0),0);\r\n    \r\n    const important = this.state.todos.reduce(\r\n        (counter, { isImportant }) => (counter += isImportant ? 1 : 0),0);\r\n\r\n        return{\r\n          all,\r\n          done,\r\n          important,\r\n          filter : this.state.filter,\r\n          onStatClick : this.onStatClick\r\n        };\r\n  }\r\n  search(list){\r\n    if(this.state.search === ''){\r\n        return list;\r\n    }\r\n\r\n    const regS = new RegExp(this.state.search, 'i');\r\n    const searchedArr = list.filter(({ text }) => {\r\n        return regS.test(text);\r\n    });\r\n\r\n    return searchedArr;\r\n}\r\n\r\nonSearchInput = ev => {\r\n    this.setState({\r\n        search : ev.target.value\r\n    });\r\n}\r\n\r\nonDeleteClick = () => {\r\n    this.setState({\r\n        maxId : 1,\r\n        todos : [],\r\n        filter : 'all',\r\n        search : ''\r\n    });\r\n\r\n    this.dbDeleteAll();\r\n}\r\n\r\n\r\nrender(){           \r\n  const stats = this.generateStatistic();\r\n\r\n  const filteredTasks = this.filter();\r\n\r\n  const searchedArr = this.search(filteredTasks);\r\n\r\n  return (\r\n      <div className='app'>\r\n        <h1 className=\"text-center\">Список задач</h1>\r\n         \r\n          <div className=\"input-group mb-3\">\r\n            \r\n              <Statistic\r\n                  { ...stats }\r\n              />\r\n              </div>\r\n          <ToDoForm\r\n              onAddItem={ this.onAddItem } />\r\n              <SearchForm\r\n                  onSearchInput={ this.onSearchInput } />\r\n          <ToDoList \r\n              data={ searchedArr }\r\n              onItemClick={ this.onItemClick }\r\n              onImportantClick={ this.onImportantClick }\r\n              onDeleteItemClick={ this.onDeleteItemClick }/>      \r\n          <ToDoDelete\r\n              onDeleteClick={ this.onDeleteClick }/>\r\n      </div>\r\n  );\r\n}\r\n \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}